What is the process of building new classes from existing classes 
=> inheriting the class from existing class with proper access specifier.

if a class c is derived from class b which is derived from class a 
all through public inheritence than a class c member can access.
=>  C can acccess all the protected and public members of A and B class 

what is a pure virtual function.
=> function declared inorder to be defind only inside the inherited class.

mechanism of deriving a class from another derived class is known as 
=> Multilevel inheritence 

Runtime polymorphism is achieved by ....
=> Dynamic Binding 

A function call mechanism that passes arguments to the function by 
passing a copy of the values of the argument is .....
=> Call by value  

In cpp dma is accomplished with the operator ...
=> new and delete

A variable defined within a block is visible from .. .. 
=> from starting to the end of the  block

The keyword friend doesnot appear while defining or declaring the function ...
=>  defining the function 

The operator which we cannot overload.. 
=> ternary operator 

Difference between c structure and cpp structure  ...
=> functions, access specifiers.

Virtual function is a type of static / dynamic binding
=> Dynamic binding 

this pointer points to .....
=> The current object of the class

Static member function can call .... variables
=> only static variables

A virtual class is same as .... class
=> abstract clasz

In which case it is mandatory to use destructor in a  class 
=> When the variables are decalared inside class are dynamic  

The members of a class are default by ....
=> private

How many constructors does a class have....
=> as many as 

A class defined within another class is called as ... 
=> nested class 

What is a purpose of inheritence ... 
=> reuse of the code 

What happen we compile this code: 
class A{

}
class B: protected A{

}
=> No errors

What causes an exception ....
=> logical error  , badass input, runtime error is called as exception

what is the error in this code
class A{
    virtual void print();
}
=> the virtual function is private 
what type of arguments a copy constructors can take
=> the object of same class

what is the legal syntax of this pointer
=>  this->a=n;

If a base class destructor is not virtual what will happen..
=> Data leak. Derived class destructor won't be called. 
















